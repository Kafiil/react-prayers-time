{"version":3,"sources":["common/Spinner.js","components/Clock.js","utils/dates.js","components/PrayerCard.js","components/SelectList.js","utils/localStorage.js","App.js","utils/customHooks.js","index.js"],"names":["spin","keyframes","Spinner","styled","div","Wrapper","Container","Loader","Clock","format","city","useState","moment","time","setTime","useEffect","interval","setInterval","clearInterval","className","NAMES","require","timesFromStringtoDate","prayer","result","forEach","name","timeString","day","split","hour","minute","newDay","date","second","parseDateTime","PrayerCard","difference","setDifference","nextOne","setNextOne","times","updateDifference","nextOnes","Object","keys","filter","t","isBefore","length","diff","map","key","SelectList","values","onChange","value","options","e","id","label","customStyles","singleValue","provided","padding","styles","menuPlacement","defaultValue","find","getFromLocalStorageOrApi","url","a","localStorage","getItem","axios","get","data","setItem","JSON","stringify","parse","cleanLocalStorage","args","includes","removeItem","API_URL","App","initialValue","setValue","useLocalStorage","setId","cities","setCities","prayers","setPrayers","PRAYERS_KEY","month","URL","initalCities","initialPrayers","init","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cdfb3727.chunk.js","sourcesContent":["import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst spin = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst Spinner = styled.div`\n  width: 64px;\n  height: 64px;\n  flex: 1;\n  &:after {\n    content: ' ';\n    display: block;\n    width: 46px;\n    height: 46px;\n    margin: 1px;\n    border-radius: 50%;\n    border: 5px solid #fff;\n    border-color: #fff transparent #fff transparent;\n    animation: ${spin} 1.2s linear infinite;\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Container = styled(Wrapper)`\n  height: 100vh;\n`;\n\nexport default function Loader() {\n  return (\n    <Container>\n      <Wrapper>\n        <Spinner />\n        <h1>Loading ...</h1>\n      </Wrapper>\n    </Container>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\n\nexport default function Clock({ format, city }) {\n  const [time, setTime] = useState(moment());\n  const defaultFormat = 'HH:mm:ss';\n  useEffect(() => {\n    const interval = setInterval(() => setTime(moment()), 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <div className=\"clock\">\n      <h1>{city}</h1>\n      <h2>{time.format('dddd LL')}</h2>\n      <h2>\n        <span>{moment(time).format(format ? format : defaultFormat)}</span>\n      </h2>\n    </div>\n  );\n}\n","import moment from 'moment';\nconst NAMES = require('../data/prayers');\n\n\nexport const parseDateTime = (timeString, day) => {\n  const [hour, minute] = timeString.split(':');\n  const newDay = new moment();\n  newDay.date(day);\n  newDay.hour(hour);\n  newDay.minute(minute)\n  newDay.second(0);\n  return newDay;\n};\n\nexport const timesFromStringtoDate = prayer => {\n  let result = {};\n  NAMES.forEach(name => {\n    result[name] = moment(parseDateTime(prayer[name], prayer.day));\n  });\n  return result;\n};\n","import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport 'moment/locale/fr';\nimport { timesFromStringtoDate } from '../utils/dates';\nconst NAMES = require('../data/prayers');\n\nconst PrayerCard = ({ prayer }) => {\n  let [difference, setDifference] = useState();\n  let [nextOne, setNextOne] = useState();\n  const times = timesFromStringtoDate(prayer);\n\n  const updateDifference = () => {\n    const nextOnes = Object.keys(times).filter(t =>\n      moment().isBefore(times[t])\n    );\n    nextOne = nextOnes.length === 0 ? NAMES[0] : nextOnes[0];\n    setNextOne(nextOne);\n    const diff = moment(times[nextOne].diff(moment())).format('HH:mm:ss');\n    setDifference(diff);\n  };\n\n  useEffect(() => {\n    updateDifference();\n    const interval = setInterval(updateDifference, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [prayer]);\n\n  return (\n    <div className=\"card\">\n      <ul>\n        {NAMES.map(name => {\n          return (\n            <li key={name} className={name === nextOne ? 'next-prayer' : ''}>\n              <div className=\"name\">{name}</div>\n              {name === nextOne && (\n                <div className=\"difference\">{difference}</div>\n              )}\n              <div className=\"time\">{prayer[name]}</div>\n            </li>\n          );\n        })}\n      </ul>\n      <dl />\n    </div>\n  );\n};\n\nexport default PrayerCard;\n","import React from 'react';\nimport Select from 'react-select';\n\nconst SelectList = ({ values, onChange, value }) => {\n  const options = values.map(e => ({\n    value: e.id,\n    label: e.name\n  }));\n\n  const customStyles = {\n    singleValue: (provided) => {\n      const padding = '20px 0';\n      return { ...provided, padding};\n    }\n  };\n\n  return (\n    <div className=\"select\">\n      <Select\n        styles={customStyles}\n        options={options}\n        menuPlacement={'top'}\n        defaultValue={options.find(e => e.value === value)}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default SelectList;\n","import axios from 'axios';\n\n//TODO: Add JSDoc\nexport const getFromLocalStorageOrApi = async (name, url) => {\n  if (!localStorage.getItem(name)) {\n    const value = (await axios.get(url)).data;\n    localStorage.setItem(name, JSON.stringify(value));\n    return value;\n  }\n\n  return JSON.parse(localStorage.getItem(name));\n};\n\n/**\n *Delete all items in the localStorage that are not specified as arguments\n *\n * @param {*} args  keys that should not be deleted from localStorage\n */\n\nexport const cleanLocalStorage = (...args) => {\n  Object.keys({ ...localStorage })\n    .filter(e => !args.includes(e))\n    .forEach(e => localStorage.removeItem(e));\n};\n","import React, { useState, useEffect } from 'react';\nimport 'reset-css';\nimport './App.css';\nimport moment from 'moment';\n\nimport Spinner from './common/Spinner';\nimport Clock from './components/Clock';\nimport PrayerCard from './components/PrayerCard';\nimport SelectList from './components/SelectList';\n\nimport { useLocalStorage } from './utils/customHooks';\nimport {\n  cleanLocalStorage,\n  getFromLocalStorageOrApi\n} from './utils/localStorage';\n\nconst API_URL = 'https://maroc-salat.herokuapp.com/';\n\nconst App = () => {\n  const [id, setId] = useLocalStorage('id', 1);\n  const [cities, setCities] = useState();\n  const [prayers, setPrayers] = useState();\n  const PRAYERS_KEY = `prayers_${moment().date()}_${moment().month() + 1}`;\n  const URL = `${API_URL}prayer?month=${moment().month() +\n    1}&day=${moment().date()}`;\n\n  useEffect(() => {\n    async function init() {\n      const initalCities = await getFromLocalStorageOrApi(\n        'cities',\n        `${API_URL}city`\n      );\n      setCities(initalCities);\n      const initialPrayers = await getFromLocalStorageOrApi(PRAYERS_KEY, URL);\n      setPrayers(initialPrayers);\n      cleanLocalStorage('id', 'cities', PRAYERS_KEY);\n    }\n    init();\n  }, [PRAYERS_KEY, URL]);\n\n  return (\n    <div id=\"main\">\n      {id && prayers ? (\n        <>\n          <Clock city={cities.find(e => e.id === id).name} />\n          <PrayerCard prayer={prayers.find(e => e.id === id)} />\n          <SelectList\n            value={id}\n            values={cities}\n            onChange={e => setId(e.value)}\n          />\n        </>\n      ) : (\n        <Spinner />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import { useState, useEffect } from 'react';\n\nexport const useLocalStorage = (name, initialValue = null) => {\n  const [value, setValue] = useState(\n    +localStorage.getItem(name) || initialValue\n  );\n\n  useEffect(() => {\n    localStorage.setItem(name, value);\n  }, [name, value]);\n\n  return [value, setValue];\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}