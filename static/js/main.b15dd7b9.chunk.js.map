{"version":3,"sources":["context/AppContext.ts","common/Spinner.tsx","components/SelectList.tsx","settings.js","components/Clock.tsx","utils/dates.ts","components/PrayerCard.tsx","components/ChangeLanguage.tsx","utils/localStorage.ts","context/types.ts","context/AppReducer.ts","App.tsx","index.tsx"],"names":["initialState","prayers","cities","id","parseInt","localStorage","getItem","lang","languages","time","moment","utcOffset","AppContext","React","createContext","spin","keyframes","Spinner","styled","div","Wrapper","Container","text","useContext","SelectList","onChange","options","map","e","value","label","name","customStyles","singleValue","provided","padding","width","textAlign","className","styles","menuPlacement","find","API_URL","StyledWrapper","StyledH","css","StyledH1","h1","StyledH2","h2","StyledH3","h3","changeCity","locale","format","NAMES","require","timesFromStringtoDate","prayer","result","Object","keys","forEach","timeString","day","split","hour","minute","newDay","date","second","parseDateTime","PrayerCard","StyledUl","ul","StyledName","StyledDifference","StyledNext","StyledLi","li","props","useState","diff","setDifference","next","setNextOne","useEffect","times","nextOnes","filter","t","isBefore","length","key","changeLanguage","checked","onColor","checkedIcon","uncheckedIcon","getFromLocalStorageOrApi","url","a","axios","get","data","setItem","JSON","stringify","parse","cleanLocalStorage","args","includes","removeItem","LOAD_CITIES","LOAD_PRAYERS","reducer","state","action","type","payload","App","useReducer","AppReducer","dispatch","PRAYERS_KEY","month","URL","initalCities","initialPrayers","init","interval","setInterval","clearInterval","Provider","ChangeLanguage","Clock","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b15dd7b9.chunk.js","sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport 'moment/locale/fr';\nimport 'moment/locale/ar-ma';\nimport { IState } from './types';\n\nexport const initialState: IState = {\n  prayers: null,\n  cities: null,\n  id: parseInt(localStorage.getItem('id') || '1'),\n  lang: localStorage.getItem('lang') || 'ar',\n  languages: ['ar', 'fr'],\n  time: moment().utcOffset(1)\n};\n\nexport const AppContext = React.createContext(initialState);\n","import React, { useContext } from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nimport { AppContext } from '../context/AppContext';\n\nconst spin = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst Spinner = styled.div`\n  width: 64px;\n  height: 64px;\n  margin-bottom: 1rem;\n  flex: 1;\n  &:after {\n    content: ' ';\n    display: block;\n    width: 46px;\n    height: 46px;\n    margin: 1px;\n    border-radius: 50%;\n    border: 5px solid #fff;\n    border-color: #fff transparent #fff transparent;\n    animation: ${spin} 1.2s linear infinite;\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Container = styled(Wrapper)`\n  height: 100vh;\n`;\n\nexport default () => {\n  const { lang } = useContext(AppContext);\n  const text = lang === 'fr' ? 'Chargement en cours ...' : '... جار التحميل';\n  return (\n    <Container>\n      <Wrapper>\n        <Spinner />\n        <h1>{text}</h1>\n      </Wrapper>\n    </Container>\n  );\n};\n","import React, { useContext } from 'react';\nimport Select from 'react-select';\nimport { AppContext } from '../context/AppContext';\n\ntype SelectListProps = { onChange: any };\nconst SelectList = ({ onChange }: SelectListProps) => {\n  const { cities, id } = useContext(AppContext);\n  const options = cities\n    ? cities.map((e: any) => ({\n        value: e.id,\n        label: e.name\n      }))\n    : [];\n\n  const customStyles = {\n    singleValue: (provided: any) => {\n      const padding = '20px 10px';\n      const textAlign = 'center';\n      return { ...provided, padding, width: '100%', textAlign };\n    }\n  };\n\n  return (\n    <div className=\"select\">\n      <Select\n        styles={customStyles}\n        options={options}\n        menuPlacement={'top'}\n        value={options.find((e: any) => e.value === id)}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default SelectList;\n","export const DEFAULT_TIME_FORMAT = 'HH:mm:ss';\nexport const API_URL = 'https://maroc-salat.herokuapp.com/';\nexport const TIME_OFFSET = 1;\n","import React, { useContext } from 'react';\nimport moment from 'moment';\nimport { AppContext } from '../context/AppContext';\nimport styled, { css } from 'styled-components';\nimport SelectList from './SelectList';\nimport { DEFAULT_TIME_FORMAT } from '../settings';\n\nconst StyledWrapper = styled.div`\n  margin-top: 2vh;\n`;\n\nconst StyledH = css`\n  text-align: center;\n  padding: 1rem;\n`;\n\nconst StyledH1 = styled.h1`\n  ${StyledH}\n`;\nconst StyledH2 = styled.h2`\n  ${StyledH}\n  text-transform: capitalize;\n`;\nconst StyledH3 = styled.h3`\n  ${StyledH}\n`;\n\ntype ClockProps = { changeCity: any };\n\nexport default ({ changeCity }: ClockProps) => {\n  const { time, lang } = useContext(AppContext);\n\n  return (\n    <StyledWrapper>\n      <StyledH1>\n        <SelectList onChange={changeCity} />\n      </StyledH1>\n      <StyledH2>{time.locale(lang).format('dddd LL')}</StyledH2>\n      <StyledH3>\n        <span>{moment(time).format(DEFAULT_TIME_FORMAT)}</span>\n      </StyledH3>\n    </StyledWrapper>\n  );\n};\n","import moment, { Moment } from 'moment';\nimport { TIME_OFFSET } from '../settings';\nconst NAMES = require('../data/prayers');\n\nexport const parseDateTime = (timeString: string, day: number): Moment => {\n  const [hour, minute] = timeString.split(':');\n  const newDay = moment();\n  newDay.date(day);\n  newDay.hour(parseInt(hour));\n  newDay.minute(parseInt(minute));\n  newDay.second(0);\n  return newDay.utcOffset(TIME_OFFSET);\n};\n\nexport const timesFromStringtoDate = (prayer: any) => {\n  let result: any = {};\n  Object.keys(NAMES).forEach(name => {\n    result[name] = moment(parseDateTime(prayer[name], prayer.day));\n  });\n  return result;\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport moment from 'moment';\nimport styled, { css } from 'styled-components';\nimport { AppContext } from '../context/AppContext';\nimport { timesFromStringtoDate } from '../utils/dates';\nimport { DEFAULT_TIME_FORMAT } from '../settings';\n\nconst NAMES = require('../data/prayers');\n\nconst PrayerCard = () => {\n  const { prayers, id, time, lang } = useContext(AppContext);\n\n  const StyledUl = styled.ul`\n    height: 50vh;\n    margin: 1vh 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    @media (min-width: 1200px) {\n      height: 50vh;\n    }\n  `;\n\n  const StyledName = styled.div`\n    text-transform: capitalize;\n  `;\n  const StyledDifference = styled.div`\n    color: red !important;\n  `;\n\n  const StyledNext = css`\n    font-weight: 700;\n    background-color: white;\n    color: black;\n    padding: 0.5rem 0.4rem 0.5rem;\n    border-radius: 2px;\n  `;\n\n  const StyledLi = styled.li`\n    margin: 1.2rem 0;\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    flex-direction: ${() => (lang === 'fr' ? 'row' : 'row-reverse')};\n    ${props => (props.className === 'next' ? StyledNext : '')}\n  `;\n\n  const prayer = (prayers || []).find((e: any) => e.id === id);\n\n  let [diff, setDifference] = useState();\n  let [next, setNextOne] = useState();\n\n  useEffect(() => {\n    const times = timesFromStringtoDate(prayer);\n    const nextOnes = Object.keys(times).filter(t => time.isBefore(times[t]));\n    const next = nextOnes.length === 0 ? Object.keys(NAMES)[0] : nextOnes[0];\n    setNextOne(next);\n    const diff = moment(times[next].diff(time)).format(DEFAULT_TIME_FORMAT);\n    setDifference(diff);\n  }, [time, prayer]);\n\n  return (\n    <StyledUl>\n      {Object.keys(NAMES).map(name => {\n        return (\n          <StyledLi key={name} className={name === next ? 'next' : ''}>\n            <StyledName>{NAMES[name][lang]}</StyledName>\n            {name === next && <StyledDifference>{diff}</StyledDifference>}\n            <div>{(prayer as any)[name]}</div>\n          </StyledLi>\n        );\n      })}\n    </StyledUl>\n  );\n};\n\nexport default PrayerCard;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { AppContext } from '../context/AppContext';\nimport Switch from 'react-switch';\n\nexport default ({ changeLanguage }: any) => {\n  const { lang } = useContext(AppContext);\n\n  const StyledWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-evenly;\n  `;\n\n  return (\n    <StyledWrapper>\n      <div>Français</div>\n      <Switch\n        onChange={() => changeLanguage()}\n        checked={lang === 'ar'}\n        onColor=\"#888\"\n        checkedIcon={false}\n        uncheckedIcon={false}\n      />\n      <div>العربية</div>\n    </StyledWrapper>\n  );\n};\n","import axios from \"axios\";\n\n//TODO: Add JSDoc\nexport const getFromLocalStorageOrApi = async (name: string, url: string) => {\n  if (!localStorage.getItem(name)) {\n    const value = (await axios.get(url)).data;\n    localStorage.setItem(name, JSON.stringify(value));\n    return value;\n  }\n\n  return JSON.parse(localStorage.getItem(name) || \"\");\n};\n\n/**\n *Delete all items in the localStorage that are not specified as arguments\n *\n * @param {*} args  keys that should not be deleted from localStorage\n */\n\nexport const cleanLocalStorage = (...args: any) => {\n  Object.keys({ ...localStorage })\n    .filter(e => !args.includes(e))\n    .forEach(e => localStorage.removeItem(e));\n};\n","export const CHANGE_CITY: string = 'CHANGE_CITY';\nexport const LOAD_CITIES: string = 'LOAD_CITIES';\nexport const LOAD_PRAYERS: string = 'LOAD_PRAYERS';\nexport const REFRESH_TIME: string = 'REFRESH_TIME';\nexport const CHANGE_LANGUAGE: string = 'CHANGE_LANGUAGE';\n\nexport interface IPrayer {\n  asr: string;\n  chorouq: string;\n  city: string;\n  dhuhr: string;\n  fajr: string;\n  ishae: string;\n  maghrib: string;\n  id: number;\n  day: Date;\n}\nexport interface ICity {\n  name: string;\n  id: number;\n}\nexport interface IState {\n  prayers: IPrayer[] | null;\n  cities: ICity[] | null;\n  id: number;\n  lang: string;\n  languages: string[];\n  time: any;\n}\n\nexport interface IAction {\n  type: string;\n  payload: any;\n}\n","import {\n  CHANGE_CITY,\n  LOAD_CITIES,\n  LOAD_PRAYERS,\n  REFRESH_TIME,\n  CHANGE_LANGUAGE,\n  IState,\n  IAction\n} from './types';\nimport moment from 'moment';\nimport { TIME_OFFSET } from '../settings';\n\nconst reducer = (state: IState, action: IAction) => {\n  switch (action.type) {\n    case CHANGE_CITY:\n      localStorage.setItem('id', action.payload);\n      return {\n        ...state,\n        time: moment().utcOffset(TIME_OFFSET),\n        id: action.payload\n      };\n    case CHANGE_LANGUAGE:\n      const lang = state.lang === 'fr' ? 'ar' : 'fr';\n      localStorage.setItem('lang', lang);\n      return {\n        ...state,\n        time: moment().utcOffset(TIME_OFFSET),\n        lang\n      };\n    case REFRESH_TIME:\n      return {\n        ...state,\n        time: moment().utcOffset(TIME_OFFSET)\n      };\n    case LOAD_CITIES:\n      return {\n        ...state,\n        time: moment().utcOffset(TIME_OFFSET),\n        cities: action.payload\n      };\n    case LOAD_PRAYERS:\n      return {\n        ...state,\n        time: moment().utcOffset(TIME_OFFSET),\n        prayers: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React, { useEffect, useReducer } from 'react';\nimport moment from 'moment';\nimport './App.css';\n\nimport Spinner from './common/Spinner';\nimport Clock from './components/Clock';\nimport PrayerCard from './components/PrayerCard';\nimport ChangeLanguage from './components/ChangeLanguage';\n\nimport {\n  cleanLocalStorage,\n  getFromLocalStorageOrApi\n} from './utils/localStorage';\n\nimport AppReducer from './context/AppReducer';\nimport { AppContext, initialState } from './context/AppContext';\nimport {\n  LOAD_CITIES,\n  LOAD_PRAYERS,\n  CHANGE_CITY,\n  CHANGE_LANGUAGE,\n  REFRESH_TIME\n} from './context/types';\nimport { API_URL } from './settings';\n\nconst App = () => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  useEffect(() => {\n    async function init() {\n      const PRAYERS_KEY = `prayers_${moment().date()}_${moment().month() + 1}`;\n      const URL = `${API_URL}prayer?month=${moment().month() +\n        1}&day=${moment().date()}`;\n      const initalCities = await getFromLocalStorageOrApi(\n        `cities_${state.lang}`,\n        `${API_URL}city?lang=${state.lang}`\n      );\n      dispatch({ type: LOAD_CITIES, payload: initalCities });\n      const initialPrayers = await getFromLocalStorageOrApi(PRAYERS_KEY, URL);\n      dispatch({ type: LOAD_PRAYERS, payload: initialPrayers });\n      cleanLocalStorage('id', 'cities_ar', 'cities_fr', 'lang', PRAYERS_KEY);\n    }\n    init();\n  }, [state.lang]);\n\n  useEffect(() => {\n    const interval = setInterval(\n      () => dispatch({ type: REFRESH_TIME, payload: null }),\n      500\n    );\n    return () => {\n      clearInterval(interval);\n    };\n  });\n\n  const changeCity = (e: any) =>\n    dispatch({ payload: e.value, type: CHANGE_CITY });\n\n  const changeLanguage = () =>\n    dispatch({ payload: null, type: CHANGE_LANGUAGE });\n\n  return (\n    <AppContext.Provider value={state}>\n      <div id=\"main\">\n        <ChangeLanguage changeLanguage={changeLanguage} />\n        {state.id && state.prayers ? (\n          <>\n            <Clock changeCity={changeCity} />\n            <PrayerCard />\n          </>\n        ) : (\n          <Spinner />\n        )}\n      </div>\n    </AppContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'reset-css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}