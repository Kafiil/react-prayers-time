{"version":3,"sources":["context/AppContext.ts","common/Spinner.tsx","components/Clock.tsx","utils/dates.ts","components/PrayerCard.tsx","components/SelectList.tsx","components/ChangeLanguage.tsx","utils/localStorage.ts","context/types.ts","context/AppReducer.ts","App.tsx","index.tsx"],"names":["initialState","prayers","cities","id","parseInt","localStorage","getItem","lang","languages","time","moment","AppContext","React","createContext","spin","keyframes","Spinner","styled","div","Wrapper","Container","text","useContext","format","city","find","e","name","className","locale","NAMES","require","timesFromStringtoDate","prayer","result","Object","keys","forEach","timeString","day","split","hour","minute","newDay","date","second","parseDateTime","PrayerCard","myStyles","flexDirection","useState","difference","setDifference","nextOne","setNextOne","times","updateDifference","nextOnes","filter","t","isBefore","length","diff","useEffect","interval","setInterval","clearInterval","map","style","key","onChange","options","value","label","customStyles","singleValue","provided","padding","width","textAlign","menu","styles","menuPlacement","getFromLocalStorageOrApi","url","a","axios","get","data","setItem","JSON","stringify","parse","cleanLocalStorage","args","includes","removeItem","LOAD_CITIES","LOAD_PRAYERS","reducer","state","action","type","payload","API_URL","App","useReducer","AppReducer","dispatch","PRAYERS_KEY","month","URL","initalCities","initialPrayers","init","Provider","ChangeLanguage","target","Clock","SelectList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c1d53f1.chunk.js","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\nimport \"moment/locale/fr\";\nimport \"moment/locale/ar-ma\";\nimport { IState } from \"./types\";\n\nexport const initialState: IState = {\n  prayers: null,\n  cities: null,\n  id: parseInt(localStorage.getItem(\"id\") || \"1\"),\n  lang: localStorage.getItem(\"lang\") || \"ar\",\n  languages: [\"ar\", \"fr\"],\n  time: moment()\n};\n\nexport const AppContext = React.createContext(initialState);\n","import React, { useContext } from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nimport { AppContext } from '../context/AppContext';\n\nconst spin = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst Spinner = styled.div`\n  width: 64px;\n  height: 64px;\n  flex: 1;\n  &:after {\n    content: ' ';\n    display: block;\n    width: 46px;\n    height: 46px;\n    margin: 1px;\n    border-radius: 50%;\n    border: 5px solid #fff;\n    border-color: #fff transparent #fff transparent;\n    animation: ${spin} 1.2s linear infinite;\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Container = styled(Wrapper)`\n  height: 100vh;\n`;\n\nexport default () => {\n  const { lang } = useContext(AppContext);\n  const text = lang === 'fr' ? 'Chargement en cours ...' : '... جار التحميل';\n  return (\n    <Container>\n      <Wrapper>\n        <Spinner />\n        <h1>{text}</h1>\n      </Wrapper>\n    </Container>\n  );\n};\n","import React, { useContext } from 'react';\nimport moment from 'moment';\nimport { AppContext } from '../context/AppContext';\n\ntype ClockProps = { format?: string };\n\nexport default ({ format }: ClockProps) => {\n  const { cities, time, id, lang } = useContext(AppContext);\n  const city = cities ? cities.find((e: any) => e.id === id)!.name : null;\n  const defaultFormat = 'HH:mm:ss';\n\n  return (\n    <div className=\"clock\">\n      <h1>{city}</h1>\n      <h2>{time.locale(lang).format('dddd LL')}</h2>\n      <h2>\n        <span>{moment(time).format(format ? format : defaultFormat)}</span>\n      </h2>\n    </div>\n  );\n};\n","import moment from 'moment';\nconst NAMES = require('../data/prayers');\n\nexport const parseDateTime = (timeString: string, day: number) => {\n  const [hour, minute] = timeString.split(':');\n  const newDay = moment();\n  newDay.date(day);\n  newDay.hour(parseInt(hour));\n  newDay.minute(parseInt(minute));\n  newDay.second(0);\n  return newDay;\n};\n\nexport const timesFromStringtoDate = (prayer: any) => {\n  let result: any = {};\n  Object.keys(NAMES).forEach(name => {\n    result[name] = moment(parseDateTime(prayer[name], prayer.day));\n  });\n  return result;\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport moment from 'moment';\nimport { AppContext } from '../context/AppContext';\n\nimport { timesFromStringtoDate } from '../utils/dates';\nconst NAMES = require('../data/prayers');\nconst DEFAULT_TIME_FORMAT = 'HH:mm:ss';\n\nconst PrayerCard = () => {\n  const { prayers, id, time, lang } = useContext(AppContext);\n  const myStyles = {\n    flexDirection: `${lang === 'fr' ? 'row' : 'row-reverse'}`\n  } as React.CSSProperties;\n\n  const prayer = (prayers || []).find((e: any) => e.id === id);\n\n  let [difference, setDifference] = useState();\n  let [nextOne, setNextOne] = useState();\n  const times = timesFromStringtoDate(prayer);\n\n  const updateDifference = () => {\n    const nextOnes = Object.keys(times).filter(t => time.isBefore(times[t]));\n    nextOne = nextOnes.length === 0 ? NAMES[0] : nextOnes[0];\n    setNextOne(nextOne);\n    const diff = moment(times[nextOne].diff(time)).format(DEFAULT_TIME_FORMAT);\n    setDifference(diff);\n  };\n\n  useEffect(() => {\n    updateDifference();\n    const interval = setInterval(updateDifference, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [time]);\n\n  return (\n    <div className=\"card\">\n      <ul>\n        {Object.keys(NAMES).map(name => {\n          return (\n            <li\n              style={myStyles}\n              key={name}\n              className={name === nextOne ? 'next-prayer' : ''}\n            >\n              <div className=\"name\">{NAMES[name][lang]}</div>\n              {name === nextOne && (\n                <div className=\"difference\">{difference}</div>\n              )}\n              <div className=\"time\">{(prayer as any)[name]}</div>\n            </li>\n          );\n        })}\n      </ul>\n      <dl />\n    </div>\n  );\n};\n\nexport default PrayerCard;\n","import React, { useContext } from 'react';\nimport Select from 'react-select';\nimport { AppContext } from '../context/AppContext';\n\ntype SelectListProps = { onChange: any };\nexport default ({ onChange }: SelectListProps) => {\n  const { cities, id, lang } = useContext(AppContext);\n  const options = cities\n    ? cities.map((e: any) => ({\n        value: e.id,\n        label: e.name\n      }))\n    : [];\n\n  const customStyles = {\n    singleValue: (provided: any) => {\n      const padding = '20px 10px';\n      const textAlign = lang === 'ar' ? 'right' : 'left';\n      return { ...provided, padding, width: '100%', textAlign };\n    },\n    menu: (provided: any) => {\n      const textAlign = lang === 'ar' ? 'right' : 'left';\n      return { ...provided, textAlign };\n    }\n  };\n\n  return (\n    <div className=\"select\">\n      <Select\n        styles={customStyles}\n        options={options}\n        menuPlacement={'top'}\n        value={options.find((e: any) => e.value === id)}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport { AppContext } from '../context/AppContext';\n\nexport default ({ onChange }: any) => {\n  const { lang, languages } = useContext(AppContext);\n  return (\n    <select value={lang} onChange={onChange}>\n      {languages.map((lang: string) => (\n        <option value={lang} key={lang}>\n          {lang}\n        </option>\n      ))}\n    </select>\n  );\n};\n","import axios from \"axios\";\n\n//TODO: Add JSDoc\nexport const getFromLocalStorageOrApi = async (name: string, url: string) => {\n  if (!localStorage.getItem(name)) {\n    const value = (await axios.get(url)).data;\n    localStorage.setItem(name, JSON.stringify(value));\n    return value;\n  }\n\n  return JSON.parse(localStorage.getItem(name) || \"\");\n};\n\n/**\n *Delete all items in the localStorage that are not specified as arguments\n *\n * @param {*} args  keys that should not be deleted from localStorage\n */\n\nexport const cleanLocalStorage = (...args: any) => {\n  Object.keys({ ...localStorage })\n    .filter(e => !args.includes(e))\n    .forEach(e => localStorage.removeItem(e));\n};\n","export const CHANGE_CITY: string = 'CHANGE_CITY';\nexport const LOAD_CITIES: string = 'LOAD_CITIES';\nexport const LOAD_PRAYERS: string = 'LOAD_PRAYERS';\nexport const REFRESH_TIME: string = 'REFRESH_TIME';\nexport const CHANGE_LANGUAGE: string = 'CHANGE_LANGUAGE';\n\nexport interface IPrayer {\n  asr: string;\n  chorouq: string;\n  city: string;\n  dhuhr: string;\n  fajr: string;\n  ishae: string;\n  maghrib: string;\n  id: number;\n  day: Date;\n}\nexport interface ICity {\n  name: string;\n  id: number;\n}\nexport interface IState {\n  prayers: IPrayer[] | null;\n  cities: ICity[] | null;\n  id: number;\n  lang: string;\n  languages: string[];\n  time: any;\n}\n\nexport interface IAction {\n  type: string;\n  payload: any;\n}\n","import {\n  CHANGE_CITY,\n  LOAD_CITIES,\n  LOAD_PRAYERS,\n  REFRESH_TIME,\n  CHANGE_LANGUAGE,\n  IState,\n  IAction\n} from './types';\n\nconst reducer = (state: IState, action: IAction) => {\n  switch (action.type) {\n    case CHANGE_CITY:\n      localStorage.setItem('id', action.payload);\n      return {\n        ...state,\n        id: action.payload\n      };\n    case CHANGE_LANGUAGE:\n      localStorage.setItem('lang', action.payload);\n      return {\n        ...state,\n        lang: action.payload\n      };\n    case REFRESH_TIME:\n      return {\n        ...state,\n        time: action.payload\n      };\n    case LOAD_CITIES:\n      return {\n        ...state,\n        cities: action.payload\n      };\n    case LOAD_PRAYERS:\n      return {\n        ...state,\n        prayers: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React, { useEffect, useReducer } from 'react';\nimport 'reset-css';\nimport './App.css';\nimport moment from 'moment';\n\nimport Spinner from './common/Spinner';\nimport Clock from './components/Clock';\nimport PrayerCard from './components/PrayerCard';\nimport SelectList from './components/SelectList';\nimport ChangeLanguage from './components/ChangeLanguage';\n\nimport {\n  cleanLocalStorage,\n  getFromLocalStorageOrApi\n} from './utils/localStorage';\n\nimport AppReducer from './context/AppReducer';\nimport { AppContext, initialState } from './context/AppContext';\nimport {\n  LOAD_CITIES,\n  LOAD_PRAYERS,\n  CHANGE_CITY,\n  CHANGE_LANGUAGE,\n  REFRESH_TIME\n} from './context/types';\n\nconst API_URL = 'https://maroc-salat.herokuapp.com/';\n\nconst App = () => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  useEffect(() => {\n    async function init() {\n      const PRAYERS_KEY = `prayers_${moment().date()}_${moment().month() + 1}`;\n      const URL = `${API_URL}prayer?month=${moment().month() +\n        1}&day=${moment().date()}`;\n      const initalCities = await getFromLocalStorageOrApi(\n        `cities_${state.lang}`,\n        `${API_URL}city?lang=${state.lang}`\n      );\n      dispatch({ type: LOAD_CITIES, payload: initalCities });\n      const initialPrayers = await getFromLocalStorageOrApi(PRAYERS_KEY, URL);\n      dispatch({ type: LOAD_PRAYERS, payload: initialPrayers });\n      cleanLocalStorage('id', 'cities_ar', 'cities_fr', 'lang', PRAYERS_KEY);\n    }\n    init();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.lang]);\n\n  useEffect(() => {\n    const interval = setInterval(\n      () => dispatch({ type: REFRESH_TIME, payload: moment() }),\n      1000\n    );\n    return () => {\n      clearInterval(interval);\n    };\n  });\n\n  const changeCity = (e: any) =>\n    dispatch({ payload: e.value, type: CHANGE_CITY });\n\n  const changeLanguage = (e: any) =>\n    dispatch({ payload: e.target.value, type: CHANGE_LANGUAGE });\n\n  return (\n    <AppContext.Provider value={state}>\n      <div id=\"main\">\n        <ChangeLanguage onChange={changeLanguage} />\n\n        {state.id && state.prayers ? (\n          <>\n            <Clock />\n            <PrayerCard />\n            <SelectList onChange={changeCity} />\n          </>\n        ) : (\n          <Spinner />\n        )}\n      </div>\n    </AppContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}