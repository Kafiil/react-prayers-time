{"version":3,"sources":["common/Spinner.js","context/AppContext.js","components/Clock.js","utils/dates.js","components/PrayerCard.js","components/SelectList.js","utils/localStorage.js","context/types.js","context/AppReducer.js","App.js","index.js"],"names":["spin","keyframes","Spinner","styled","div","Wrapper","Container","Loader","initialState","prayers","cities","localStorage","getItem","id","lang","languages","time","moment","AppContext","React","createContext","Clock","format","useContext","city","find","e","name","className","locale","NAMES","require","timesFromStringtoDate","prayer","result","Object","keys","forEach","timeString","day","split","hour","minute","newDay","date","second","parseDateTime","PrayerCard","useState","difference","setDifference","nextOne","setNextOne","times","updateDifference","nextOnes","filter","t","isBefore","length","diff","useEffect","interval","setInterval","clearInterval","map","style","flexDirection","key","SelectList","onChange","options","value","label","customStyles","singleValue","provided","padding","styles","menuPlacement","getFromLocalStorageOrApi","url","a","axios","get","data","setItem","JSON","stringify","parse","cleanLocalStorage","args","includes","removeItem","LOAD_CITIES","LOAD_PRAYERS","reducer","state","action","type","payload","API_URL","App","useReducer","AppReducer","dispatch","PRAYERS_KEY","month","URL","initalCities","initialPrayers","init","Provider","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4be6eda6.chunk.js","sourcesContent":["import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst spin = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst Spinner = styled.div`\n  width: 64px;\n  height: 64px;\n  flex: 1;\n  &:after {\n    content: ' ';\n    display: block;\n    width: 46px;\n    height: 46px;\n    margin: 1px;\n    border-radius: 50%;\n    border: 5px solid #fff;\n    border-color: #fff transparent #fff transparent;\n    animation: ${spin} 1.2s linear infinite;\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Container = styled(Wrapper)`\n  height: 100vh;\n`;\n\nexport default function Loader() {\n  return (\n    <Container>\n      <Wrapper>\n        <Spinner />\n        <h1>Loading ...</h1>\n      </Wrapper>\n    </Container>\n  );\n}\n","import React from 'react';\nimport moment from 'moment';\nimport 'moment/locale/fr';\nimport 'moment/locale/ar-ma';\n\nexport const initialState = {\n  prayers: null,\n  cities:\n    localStorage.getItem('lang') &&\n    localStorage.getItem(`cities_${localStorage.getItem('lang')}`)\n      ? localStorage.getItem(`cities_${localStorage.getItem('lang')}`)\n      : null,\n  id: +localStorage.getItem('id') || 1,\n  lang: localStorage.getItem('lang') || 'ar',\n  languages: ['ar', 'fr'],\n  time: new moment()\n};\n\nexport const AppContext = React.createContext(initialState);\n","import React, { useContext } from 'react';\nimport moment from 'moment';\nimport { AppContext } from '../context/AppContext';\n\nexport default function Clock({ format }) {\n  const { cities, time, id, lang } = useContext(AppContext);\n  const city = cities.find(e => e.id === id).name;\n  const defaultFormat = 'HH:mm:ss';\n\n  return (\n    <div className=\"clock\">\n      <h1>{city}</h1>\n      <h2>{time.locale(lang).format('dddd LL')}</h2>\n      <h2>\n        <span>{moment(time).format(format ? format : defaultFormat)}</span>\n      </h2>\n    </div>\n  );\n}\n","import moment from 'moment';\nconst NAMES = require('../data/prayers');\n\nexport const parseDateTime = (timeString, day) => {\n  const [hour, minute] = timeString.split(':');\n  const newDay = new moment();\n  newDay.date(day);\n  newDay.hour(hour);\n  newDay.minute(minute);\n  newDay.second(0);\n  return newDay;\n};\n\nexport const timesFromStringtoDate = prayer => {\n  let result = {};\n  Object.keys(NAMES).forEach(name => {\n    result[name] = moment(parseDateTime(prayer[name], prayer.day));\n  });\n  return result;\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport moment from 'moment';\nimport { AppContext } from '../context/AppContext';\n\nimport { timesFromStringtoDate } from '../utils/dates';\nconst NAMES = require('../data/prayers');\nconst DEFAULT_TIME_FORMAT = 'HH:mm:ss';\n\nconst PrayerCard = () => {\n  const { prayers, id, time, lang } = useContext(AppContext);\n  const prayer = prayers.find(e => e.id === id);\n\n  let [difference, setDifference] = useState();\n  let [nextOne, setNextOne] = useState();\n  const times = timesFromStringtoDate(prayer);\n\n  const updateDifference = () => {\n    const nextOnes = Object.keys(times).filter(t => time.isBefore(times[t]));\n    nextOne = nextOnes.length === 0 ? NAMES[0] : nextOnes[0];\n    setNextOne(nextOne);\n    const diff = moment(times[nextOne].diff(time)).format(DEFAULT_TIME_FORMAT);\n    setDifference(diff);\n  };\n\n  useEffect(() => {\n    updateDifference();\n    const interval = setInterval(updateDifference, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [time]);\n\n  return (\n    <div className=\"card\">\n      <ul>\n        {Object.keys(NAMES).map(name => {\n          return (\n            <li\n              style={{ flexDirection: `row${lang === 'fr' ? '' : '-reverse'}` }}\n              key={name}\n              className={name === nextOne ? 'next-prayer' : ''}\n            >\n              <div className=\"name\">{NAMES[name][lang]}</div>\n              {name === nextOne && (\n                <div className=\"difference\">{difference}</div>\n              )}\n              <div className=\"time\">{prayer[name]}</div>\n            </li>\n          );\n        })}\n      </ul>\n      <dl />\n    </div>\n  );\n};\n\nexport default PrayerCard;\n","import React, { useContext } from 'react';\nimport Select from 'react-select';\nimport { AppContext } from '../context/AppContext';\n\nconst SelectList = ({ onChange }) => {\n  const { cities, id } = useContext(AppContext);\n  const options = cities.map(e => ({\n    value: e.id,\n    label: e.name\n  }));\n\n  const customStyles = {\n    singleValue: provided => {\n      const padding = '20px 0';\n      return { ...provided, padding };\n    }\n  };\n\n  return (\n    <div className=\"select\">\n      <Select\n        styles={customStyles}\n        options={options}\n        menuPlacement={'top'}\n        value={options.find(e => e.value === id)}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default SelectList;\n","import axios from 'axios';\n\n//TODO: Add JSDoc\nexport const getFromLocalStorageOrApi = async (name, url) => {\n  if (!localStorage.getItem(name)) {\n    const value = (await axios.get(url)).data;\n    localStorage.setItem(name, JSON.stringify(value));\n    return value;\n  }\n\n  return JSON.parse(localStorage.getItem(name));\n};\n\n/**\n *Delete all items in the localStorage that are not specified as arguments\n *\n * @param {*} args  keys that should not be deleted from localStorage\n */\n\nexport const cleanLocalStorage = (...args) => {\n  Object.keys({ ...localStorage })\n    .filter(e => !args.includes(e))\n    .forEach(e => localStorage.removeItem(e));\n};\n","export const CHANGE_CITY = 'CHANGE_CITY';\nexport const LOAD_CITIES = 'LOAD_CITIES';\nexport const LOAD_PRAYERS = 'LOAD_PRAYERS';\nexport const REFRESH_TIME = 'REFRESH_TIME';\nexport const CHANGE_LANGUAGE = 'CHANGE_LANGUAGE';\n","import {\n  CHANGE_CITY,\n  LOAD_CITIES,\n  LOAD_PRAYERS,\n  REFRESH_TIME,\n  CHANGE_LANGUAGE\n} from './types';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case CHANGE_CITY:\n      localStorage.setItem('id', action.payload);\n      return {\n        ...state,\n        id: action.payload\n      };\n    case CHANGE_LANGUAGE:\n      localStorage.setItem('lang', action.payload);\n      return {\n        ...state,\n        lang: action.payload\n      };\n    case REFRESH_TIME:\n      return {\n        ...state,\n        time: action.payload\n      };\n    case LOAD_CITIES:\n      return {\n        ...state,\n        cities: action.payload\n      };\n    case LOAD_PRAYERS:\n      return {\n        ...state,\n        prayers: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React, { useEffect, useReducer } from 'react';\nimport 'reset-css';\nimport './App.css';\nimport moment from 'moment';\n\nimport Spinner from './common/Spinner';\nimport Clock from './components/Clock';\nimport PrayerCard from './components/PrayerCard';\nimport SelectList from './components/SelectList';\n\nimport {\n  cleanLocalStorage,\n  getFromLocalStorageOrApi\n} from './utils/localStorage';\n\nimport AppReducer from './context/AppReducer';\nimport { AppContext, initialState } from './context/AppContext';\nimport {\n  LOAD_CITIES,\n  LOAD_PRAYERS,\n  CHANGE_CITY,\n  CHANGE_LANGUAGE,\n  REFRESH_TIME\n} from './context/types';\n\nconst API_URL = 'https://maroc-salat.herokuapp.com/';\n\nconst App = () => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  useEffect(() => {\n    async function init() {\n      const PRAYERS_KEY = `prayers_${moment().date()}_${moment().month() + 1}`;\n      const URL = `${API_URL}prayer?month=${moment().month() +\n        1}&day=${moment().date()}`;\n      const initalCities = await getFromLocalStorageOrApi(\n        `cities_${state.lang}`,\n        `${API_URL}city?lang=${state.lang}`\n      );\n      dispatch({ type: LOAD_CITIES, payload: initalCities });\n      const initialPrayers = await getFromLocalStorageOrApi(PRAYERS_KEY, URL);\n      dispatch({ type: LOAD_PRAYERS, payload: initialPrayers });\n      cleanLocalStorage('id', 'cities_ar', 'cities_fr', 'lang', PRAYERS_KEY);\n    }\n    init();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.lang]);\n\n  useEffect(() => {\n    const interval = setInterval(\n      () => dispatch({ type: REFRESH_TIME, payload: new moment() }),\n      1000\n    );\n    return () => {\n      clearInterval(interval);\n    };\n  });\n\n  return (\n    <AppContext.Provider value={{ ...state, dispatch }}>\n      <div id=\"main\">\n        {state.id && state.prayers ? (\n          <>\n            <select\n              value={state.lang}\n              onChange={e =>\n                dispatch({ payload: e.target.value, type: CHANGE_LANGUAGE })\n              }\n            >\n              {state.languages.map(lang => (\n                <option value={lang} key={lang}>\n                  {lang}\n                </option>\n              ))}\n            </select>\n            <Clock />\n            <PrayerCard />\n            <SelectList\n              onChange={e => dispatch({ payload: e.value, type: CHANGE_CITY })}\n            />\n          </>\n        ) : (\n          <Spinner />\n        )}\n      </div>\n    </AppContext.Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}