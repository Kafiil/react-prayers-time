{"version":3,"sources":["common/spinner.module.css","common/spinner.js","utils/dates.js","components/prayerCard.js","utils/strings.js","components/selectList.js","App.js","index.js"],"names":["module","exports","spinner","container","row","react_default","a","createElement","className","styles","NAMES","require","timesFromStringtoDate","prayer","result","forEach","name","moment","timeString","day","_timeString$split","split","_timeString$split2","Object","slicedToArray","hour","minute","newDay","date","parseDateTime","PrayerCard","_ref","_useState","useState","_useState2","difference","setDifference","_useState3","_useState4","nextOne","setNextOne","times","updateDifference","nextOnes","keys","filter","t","isBefore","length","diff","format","useEffect","interval","setInterval","clearInterval","match","map","x","charAt","toUpperCase","slice","join","city","key","SelectList","values","onChange","value","c","id","API_URL","App","cities","setCities","prayers","setPrayers","_useState5","localStorage","getItem","_useState6","setId","_init","asyncToGenerator","regenerator_default","mark","_callee","today","yesterday","month","PRAYERS_KEY","YESTERDAY_KEY","URL","wrap","_context","prev","next","subtract","concat","t0","JSON","parse","axios","get","sent","data","setItem","stringify","t1","removeItem","stop","apply","this","arguments","init","Fragment","prayerCard","find","e","selectList","target","common_spinner","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.39513904.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"spinner_spinner__3ahFg\",\"container\":\"spinner_container__36_1M\",\"row\":\"spinner_row__2zXui\"};","import React from \"react\";\r\nimport styles from \"./spinner.module.css\";\r\n\r\nfunction spinner() {\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.row}>\r\n        <div className={styles.spinner} />\r\n      </div>\r\n      <div className={styles.row}>\r\n        <h1> Loading </h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default spinner;\r\n","import moment from 'moment';\r\nconst NAMES = require('../data/prayers');\r\n\r\n\r\nexport const parseDateTime = (timeString, day) => {\r\n  const [hour, minute] = timeString.split(':');\r\n  const newDay = new moment();\r\n  newDay.date(day);\r\n  newDay.hour(hour);\r\n  newDay.minute(minute)\r\n  return newDay;\r\n};\r\n\r\nexport const timesFromStringtoDate = prayer => {\r\n  let result = {};\r\n  NAMES.forEach(name => {\r\n    result[name] = moment(parseDateTime(prayer[name], prayer.day));\r\n  });\r\n  return result;\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport 'moment/locale/fr';\r\nimport { timesFromStringtoDate } from '../utils/dates';\r\nimport { toTitleCase } from '../utils/strings';\r\nconst NAMES = require('../data/prayers');\r\n\r\n//TODO: extract to a lib\r\n\r\nconst PrayerCard = ({ prayer }) => {\r\n  let [difference, setDifference] = useState();\r\n  let [nextOne, setNextOne] = useState();\r\n  const times = timesFromStringtoDate(prayer);\r\n\r\n  const updateDifference = () => {\r\n    const nextOnes = Object.keys(times).filter(t =>\r\n      moment().isBefore(times[t])\r\n    );\r\n    nextOne = nextOnes.length === 0 ? NAMES[0] : nextOnes[0];\r\n    setNextOne(nextOne);\r\n    const diff = moment(times[nextOne].diff(moment())).format('HH:mm');\r\n    setDifference(diff);\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateDifference();\r\n    const interval = setInterval(updateDifference, 60000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [prayer]);\r\n\r\n  let date = toTitleCase(\r\n    moment(prayer.date)\r\n      // .locale(local)\r\n      .format('dddd LL')\r\n  );\r\n\r\n  // toTitleCase function does not work for arabic\r\n  // if (local !== 'ar') {\r\n  //   date = toTitleCase(date);\r\n  // }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h1>{prayer.city}</h1>\r\n      <h2>{date}</h2>\r\n      <ul>\r\n        {NAMES.map(name => {\r\n          return (\r\n            <li key={name} className={name === nextOne ? 'next-prayer' : ''}>\r\n              <span className=\"name\">{name}</span>\r\n              <span className=\"time\">{prayer[name]}</span>\r\n              {name === nextOne && (\r\n                <span className=\"difference\">{difference}</span>\r\n              )}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      <dl />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrayerCard;\r\n","export const toTitleCase = str =>\r\n  str\r\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\r\n    .map(x => x.charAt(0).toUpperCase() + x.slice(1))\r\n    .join(' ');","import React from 'react';\r\n\r\nconst SelectList = ({ values, onChange, value }) => {\r\n  return (\r\n    <div className=\"select\">\r\n      <select value={value} onChange={onChange}>\r\n        {values.map(c => {\r\n          return (\r\n            <option value={c.id} key={c.id}>\r\n              {c.name}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport 'reset-css';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nimport Spinner from './common/spinner';\r\nimport PrayerCard from './components/prayerCard';\r\nimport SelectList from './components/selectList';\r\n\r\nconst API_URL = 'https://maroc-salat.herokuapp.com/';\r\n\r\nconst App = () => {\r\n  let [cities, setCities] = useState();\r\n  let [prayers, setPrayers] = useState();\r\n  let [id, setId] = useState(+localStorage.getItem('id') || 1);\r\n\r\n  useEffect(() => {\r\n    async function init() {\r\n      const today = moment();\r\n      const yesterday = moment().subtract(1, 'day');\r\n\r\n      const day = moment().date();\r\n      const month = moment().month() + 1;\r\n      const PRAYERS_KEY = `prayers_${day}_${month}`;\r\n      const YESTERDAY_KEY = `prayers_${yesterday.date()}_${yesterday.month()}`;\r\n\r\n      //TODO: Extract a custom hook\r\n      const cities = localStorage.getItem('cities')\r\n        ? JSON.parse(localStorage.getItem('cities'))\r\n        : (await axios.get(`${API_URL}city`)).data;\r\n\r\n      setCities(cities);\r\n      localStorage.setItem('cities', JSON.stringify(cities));\r\n\r\n      const URL = `${API_URL}prayer?month=${today.month()}&day=${today.date()}`;\r\n\r\n      const prayers = localStorage.getItem(PRAYERS_KEY)\r\n        ? JSON.parse(localStorage.getItem(PRAYERS_KEY))\r\n        : (await axios.get(URL)).data;\r\n      setPrayers(prayers);\r\n      localStorage.removeItem(YESTERDAY_KEY);\r\n      localStorage.setItem(PRAYERS_KEY, JSON.stringify(prayers));\r\n    }\r\n\r\n    init();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('id', id);\r\n  }, [id]);\r\n\r\n  const onChange = e => {\r\n    const id = +e.target.value;\r\n    setId(id);\r\n  };\r\n\r\n  return (\r\n    <div id=\"main\">\r\n      {id && prayers ? (\r\n        <>\r\n          <PrayerCard prayer={prayers.find(e => e.id === id)} />\r\n          <SelectList value={id} values={cities} onChange={onChange} />\r\n        </>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}