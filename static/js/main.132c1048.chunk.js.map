{"version":3,"sources":["common/Spinner.js","context/AppContext.js","components/Clock.js","utils/dates.js","components/PrayerCard.js","components/SelectList.js","utils/localStorage.js","context/types.js","context/AppReducer.js","App.js","index.js"],"names":["spin","keyframes","Spinner","styled","div","Wrapper","Container","Loader","initialState","prayers","cities","id","localStorage","getItem","time","moment","AppContext","React","createContext","Clock","format","useContext","city","find","e","name","className","NAMES","require","timesFromStringtoDate","prayer","result","forEach","timeString","day","split","hour","minute","newDay","date","second","parseDateTime","PrayerCard","useState","difference","setDifference","nextOne","setNextOne","times","updateDifference","nextOnes","Object","keys","filter","t","isBefore","length","diff","useEffect","interval","setInterval","clearInterval","map","key","SelectList","onChange","options","value","label","customStyles","singleValue","provided","padding","styles","menuPlacement","defaultValue","getFromLocalStorageOrApi","url","a","axios","get","data","setItem","JSON","stringify","parse","cleanLocalStorage","args","includes","removeItem","LOAD_CITIES","LOAD_PRAYERS","reducer","state","action","type","payload","API_URL","App","useReducer","AppReducer","dispatch","PRAYERS_KEY","month","URL","initalCities","initialPrayers","init","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.132c1048.chunk.js","sourcesContent":["import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst spin = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst Spinner = styled.div`\n  width: 64px;\n  height: 64px;\n  flex: 1;\n  &:after {\n    content: ' ';\n    display: block;\n    width: 46px;\n    height: 46px;\n    margin: 1px;\n    border-radius: 50%;\n    border: 5px solid #fff;\n    border-color: #fff transparent #fff transparent;\n    animation: ${spin} 1.2s linear infinite;\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Container = styled(Wrapper)`\n  height: 100vh;\n`;\n\nexport default function Loader() {\n  return (\n    <Container>\n      <Wrapper>\n        <Spinner />\n        <h1>Loading ...</h1>\n      </Wrapper>\n    </Container>\n  );\n}\n","import React from 'react';\nimport moment from 'moment';\nimport 'moment/locale/fr';\n\nexport const initialState = {\n  prayers: null,\n  cities: null,\n  id: +localStorage.getItem('id') || 1,\n  time: new moment()\n};\n\nexport const AppContext = React.createContext(initialState);\n","import React, { useContext } from 'react';\nimport moment from 'moment';\nimport { AppContext } from '../context/AppContext';\n\nexport default function Clock({ format }) {\n  const { cities, time, id } = useContext(AppContext);\n  const city = cities.find(e => e.id === id).name;\n  const defaultFormat = 'HH:mm:ss';\n\n  return (\n    <div className=\"clock\">\n      <h1>{city}</h1>\n      <h2>{time.format('dddd LL')}</h2>\n      <h2>\n        <span>{moment(time).format(format ? format : defaultFormat)}</span>\n      </h2>\n    </div>\n  );\n}\n","import moment from 'moment';\nconst NAMES = require('../data/prayers');\n\n\nexport const parseDateTime = (timeString, day) => {\n  const [hour, minute] = timeString.split(':');\n  const newDay = new moment();\n  newDay.date(day);\n  newDay.hour(hour);\n  newDay.minute(minute)\n  newDay.second(0);\n  return newDay;\n};\n\nexport const timesFromStringtoDate = prayer => {\n  let result = {};\n  NAMES.forEach(name => {\n    result[name] = moment(parseDateTime(prayer[name], prayer.day));\n  });\n  return result;\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport moment from 'moment';\nimport { AppContext } from '../context/AppContext';\n\nimport 'moment/locale/fr';\nimport { timesFromStringtoDate } from '../utils/dates';\nconst NAMES = require('../data/prayers');\nconst DEFAULT_TIME_FORMAT = 'HH:mm:ss';\n\nconst PrayerCard = () => {\n  const { prayers, id, time } = useContext(AppContext);\n  const prayer = prayers.find(e => e.id === id);\n\n  let [difference, setDifference] = useState();\n  let [nextOne, setNextOne] = useState();\n  const times = timesFromStringtoDate(prayer);\n\n  const updateDifference = () => {\n    const nextOnes = Object.keys(times).filter(t => time.isBefore(times[t]));\n    nextOne = nextOnes.length === 0 ? NAMES[0] : nextOnes[0];\n    setNextOne(nextOne);\n    const diff = moment(times[nextOne].diff(time)).format(DEFAULT_TIME_FORMAT);\n    setDifference(diff);\n  };\n\n  useEffect(() => {\n    updateDifference();\n    const interval = setInterval(updateDifference, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [time]);\n\n  return (\n    <div className=\"card\">\n      <ul>\n        {NAMES.map(name => {\n          return (\n            <li key={name} className={name === nextOne ? 'next-prayer' : ''}>\n              <div className=\"name\">{name}</div>\n              {name === nextOne && (\n                <div className=\"difference\">{difference}</div>\n              )}\n              <div className=\"time\">{prayer[name]}</div>\n            </li>\n          );\n        })}\n      </ul>\n      <dl />\n    </div>\n  );\n};\n\nexport default PrayerCard;\n","import React, { useContext } from 'react';\nimport Select from 'react-select';\nimport { AppContext } from '../context/AppContext';\n\nconst SelectList = ({ onChange }) => {\n  const { cities, id } = useContext(AppContext);\n  const options = cities.map(e => ({\n    value: e.id,\n    label: e.name\n  }));\n\n  const customStyles = {\n    singleValue: provided => {\n      const padding = '20px 0';\n      return { ...provided, padding };\n    }\n  };\n\n  return (\n    <div className=\"select\">\n      <Select\n        styles={customStyles}\n        options={options}\n        menuPlacement={'top'}\n        defaultValue={options.find(e => e.value === id)}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default SelectList;\n","import axios from 'axios';\n\n//TODO: Add JSDoc\nexport const getFromLocalStorageOrApi = async (name, url) => {\n  if (!localStorage.getItem(name)) {\n    const value = (await axios.get(url)).data;\n    localStorage.setItem(name, JSON.stringify(value));\n    return value;\n  }\n\n  return JSON.parse(localStorage.getItem(name));\n};\n\n/**\n *Delete all items in the localStorage that are not specified as arguments\n *\n * @param {*} args  keys that should not be deleted from localStorage\n */\n\nexport const cleanLocalStorage = (...args) => {\n  Object.keys({ ...localStorage })\n    .filter(e => !args.includes(e))\n    .forEach(e => localStorage.removeItem(e));\n};\n","export const CHANGE_CITY = 'CHANGE_CITY';\nexport const LOAD_CITIES = 'LOAD_CITIES';\nexport const LOAD_PRAYERS = 'LOAD_PRAYERS';\nexport const REFRESH_TIME = 'REFRESH_TIME';\n","import { CHANGE_CITY, LOAD_CITIES, LOAD_PRAYERS, REFRESH_TIME } from './types';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case CHANGE_CITY:\n      localStorage.setItem('id', action.payload);\n      return {\n        ...state,\n        id: action.payload\n      };\n    case REFRESH_TIME:\n      return {\n        ...state,\n        time: action.payload\n      };\n    case LOAD_CITIES:\n      return {\n        ...state,\n        cities: action.payload\n      };\n    case LOAD_PRAYERS:\n      return {\n        ...state,\n        prayers: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React, { useEffect, useReducer } from 'react';\nimport 'reset-css';\nimport './App.css';\nimport moment from 'moment';\n\nimport Spinner from './common/Spinner';\nimport Clock from './components/Clock';\nimport PrayerCard from './components/PrayerCard';\nimport SelectList from './components/SelectList';\n\nimport {\n  cleanLocalStorage,\n  getFromLocalStorageOrApi\n} from './utils/localStorage';\n\nimport AppReducer from './context/AppReducer';\nimport { AppContext, initialState } from './context/AppContext';\nimport {\n  LOAD_CITIES,\n  LOAD_PRAYERS,\n  CHANGE_CITY,\n  REFRESH_TIME\n} from './context/types';\n\nconst API_URL = 'https://maroc-salat.herokuapp.com/';\n\nconst App = () => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  const PRAYERS_KEY = `prayers_${moment().date()}_${moment().month() + 1}`;\n  const URL = `${API_URL}prayer?month=${moment().month() +\n    1}&day=${moment().date()}`;\n\n  useEffect(() => {\n    async function init() {\n      const initalCities = await getFromLocalStorageOrApi(\n        'cities',\n        `${API_URL}city`\n      );\n      dispatch({ type: LOAD_CITIES, payload: initalCities });\n      const initialPrayers = await getFromLocalStorageOrApi(PRAYERS_KEY, URL);\n      dispatch({ type: LOAD_PRAYERS, payload: initialPrayers });\n      cleanLocalStorage('id', 'cities', PRAYERS_KEY);\n    }\n    init();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const interval = setInterval(\n      () => dispatch({ type: REFRESH_TIME, payload: new moment() }),\n      1000\n    );\n    return () => {\n      clearInterval(interval);\n    };\n  });\n\n  return (\n    <AppContext.Provider value={{ ...state, dispatch }}>\n      <div id=\"main\">\n        {state.id && state.prayers ? (\n          <>\n            <Clock />\n            <PrayerCard />\n            <SelectList\n              onChange={e => dispatch({ payload: e.value, type: CHANGE_CITY })}\n            />\n          </>\n        ) : (\n          <Spinner />\n        )}\n      </div>\n    </AppContext.Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}