{"version":3,"sources":["common/spinner.module.css","utils/dates.js","components/prayerCard.js","utils/strings.js","common/spinner.js","components/selectList.js","App.js","index.js"],"names":["module","exports","spinner","container","row","NAMES","require","timesFromStringtoDate","prayer","result","forEach","name","moment","timeString","day","_timeString$split","split","_timeString$split2","Object","slicedToArray","hour","minute","newDay","Date","setHours","setMinutes","parseDateTime","PrayerCard","_ref","local","_useState","useState","_useState2","difference","setDifference","_useState3","_useState4","nextOne","setNextOne","times","updateDifference","nexOnes","keys","filter","t","isBefore","length","diff","format","useEffect","interval","setInterval","clearInterval","date","locale","match","map","x","charAt","toUpperCase","slice","join","react_default","a","createElement","className","city","key","styles","SelectList","values","onChange","value","c","id","API_URL","byName","b","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","target","localStorage","setItem","current","state","prayers","p","setState","getItem","axios","get","concat","cities","data","sort","JSON","stringify","parse","month","PRAYERS_KEY","Fragment","prayerCard","selectList","common_spinner","Component","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.c40bd6d3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"spinner_spinner__3ahFg\",\"container\":\"spinner_container__36_1M\",\"row\":\"spinner_row__2zXui\"};","import moment from 'moment';\r\nconst NAMES = require('../data/prayers');\r\n\r\n\r\nexport const parseDateTime = (timeString, day) => {\r\n  const [hour, minute] = timeString.split(':');\r\n  const newDay = new Date(day);\r\n  newDay.setHours(hour);\r\n  newDay.setMinutes(minute);\r\n  return newDay;\r\n};\r\n\r\nexport const timesFromStringtoDate = prayer => {\r\n  let result = {};\r\n  NAMES.forEach(name => {\r\n    result[name] = moment(parseDateTime(prayer[name], prayer.day));\r\n  });\r\n  return result;\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport 'moment/locale/fr';\r\nimport 'moment/locale/ar-ma';\r\nimport { timesFromStringtoDate } from '../utils/dates';\r\nimport { toTitleCase } from '../utils/strings';\r\nconst NAMES = require('../data/prayers');\r\n\r\n//TODO: extract to a lib\r\n\r\n\r\nconst PrayerCard = ({ prayer, local }) => {\r\n  let [difference, setDifference] = useState();\r\n  let [nextOne, setNextOne] = useState();\r\n  const times = timesFromStringtoDate(prayer);\r\n\r\n  const updateDifference = () => {\r\n    const nexOnes = Object.keys(times).filter(t => moment().isBefore(times[t]));\r\n    nextOne = nexOnes.length === 0 ? 'fajr' : nexOnes[0];\r\n    setNextOne(nextOne);\r\n    const diff = moment(times[nextOne].diff(moment())).format('HH:mm');\r\n    setDifference(diff);\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateDifference();\r\n    const interval = setInterval(updateDifference, 60000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [prayer]);\r\n\r\n  let date = moment(prayer.date)\r\n    .locale(local)\r\n    .format('dddd LL');\r\n\r\n  if (local === 'fr') {\r\n    date = toTitleCase(date);\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h1>{prayer.city}</h1>\r\n      <h2>{date}</h2>\r\n      <ul>\r\n        {NAMES.map(name => {\r\n          return (\r\n            <li key={name} className={name === nextOne ? 'next-prayer' : ''}>\r\n              <span className=\"name\">{name}</span>\r\n              <span className=\"time\">{prayer[name]}</span>\r\n              {name === nextOne && (\r\n                <span className=\"difference\">{difference}</span>\r\n              )}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      <dl />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrayerCard;\r\n","export const toTitleCase = str =>\r\n  str\r\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\r\n    .map(x => x.charAt(0).toUpperCase() + x.slice(1))\r\n    .join(' ');","import React from \"react\";\r\nimport styles from \"./spinner.module.css\";\r\n\r\nfunction spinner() {\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.row}>\r\n        <div className={styles.spinner} />\r\n      </div>\r\n      <div className={styles.row}>\r\n        <h1> Loading </h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default spinner;\r\n","import React from 'react';\r\n\r\nconst SelectList = ({ values, onChange, value }) => {\r\n  return (\r\n    <div className=\"select\">\r\n      <select value={value} onChange={onChange}>\r\n        {values.map(c => {\r\n          return (\r\n            <option value={c.id} key={c.id}>\r\n              {c.name}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectList;\r\n","import React, { Component } from 'react';\r\nimport 'reset-css';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nimport PrayerCard from './components/prayerCard';\r\nimport Spinner from './common/spinner';\r\nimport SelectList from './components/selectList';\r\n\r\nconst API_URL = 'https://maroc-salat.herokuapp.com/';\r\n\r\nconst byName = (a, b) => (a.name > b.name ? 1 : b.name > a.name ? -1 : 0);\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      local: 'fr'\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    //TODO: Refactor this mess\r\n    if (!localStorage.getItem('cities')) {\r\n      const cities = (await axios.get(`${API_URL}city`)).data.sort(byName);\r\n      localStorage.setItem('cities', JSON.stringify(cities));\r\n    }\r\n    const cities = JSON.parse(localStorage.getItem('cities'));\r\n\r\n    if (!localStorage.getItem('id')) {\r\n      localStorage.setItem('id', cities[0].id);\r\n    }\r\n    const id = +localStorage.getItem('id');\r\n\r\n    const day = moment().date();\r\n    const month = moment().month() + 1;\r\n\r\n    const PRAYERS_KEY = `prayers_${day}_${month}`;\r\n    if (!localStorage.getItem(PRAYERS_KEY)) {\r\n      const prayers = (await axios.get(\r\n        `${API_URL}prayer?month=${month}&day=${day}`\r\n      )).data;\r\n      localStorage.setItem(PRAYERS_KEY, JSON.stringify(prayers));\r\n    }\r\n    const prayers = JSON.parse(localStorage.getItem(PRAYERS_KEY));\r\n    this.setState({\r\n      cities,\r\n      id,\r\n      prayers,\r\n      current: prayers.filter(p => p.id === id)[0]\r\n    });\r\n  }\r\n\r\n  onChange = e => {\r\n    const id = +e.target.value;\r\n    localStorage.setItem('id', id);\r\n    const current = this.state.prayers.filter(p => p.id === id)[0];\r\n    this.setState({ current, id });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"main\">\r\n        {this.state.prayers ? (\r\n          <React.Fragment>\r\n            <PrayerCard local={this.state.local} prayer={this.state.current} />\r\n            <SelectList\r\n              value={this.state.id}\r\n              values={this.state.cities}\r\n              onChange={this.onChange}\r\n            />\r\n          </React.Fragment>\r\n        ) : (\r\n          <Spinner />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}